#include <stdlib.h>
#include <ncurses.h>


#define	D_UP	0
#define D_DOWN	1
#define	D_RIGHT	2
#define D_LEFT	3
#define DEF_LEN	4
#define BODY_COLOR 3

typedef struct Node node;
struct Node{
    int len;
    int dir;
    node* next;
    node* prev;
};

void draw_block();
void draw_snake();
void add_node();
void del_node();
int main(){
    initscr();
    int maxx,maxy;
    getmaxyx(stdscr,maxy,maxx);
    
    WINDOW* game_win = newwin(maxy,maxx,0,0);
    box(game_win,1,1);
    
    curs_set(0);
    noecho();
    keypad(game_win,TRUE);

    
    node* head = malloc(sizeof(node));
    head->len = DEF_LEN;
    head->dir = D_LEFT;
    head->next = NULL;
    head->prev = NULL;
    node* tail = head;

  


    wrefresh(game_win); 
    int game_state = 1;
    int ch;
    int x=10,y=10;
    while(game_state){
//        ch=wgetch(game_win);    
        
        wattron(game_win,A_REVERSE);
        draw_snake(game_win,head,y,x++);
        sleep(1);
  //      wattroff(game_win,A_REVERSE);
    //    draw_snake(game_win,head,y,x++);
        
    
    
    }

    endwin();
    return 0;
}

void add_node(node** head,int dir,int len) {
    node* tempnode = malloc(sizeof(node));
    tempnode->dir = dir;
    tempnode->len = len;
    tempnode->next = *head;
    (*head)->prev = tempnode;
    *head = tempnode;    
}
void del_node(node** tail) {
    if(!(*tail)->prev) return;
    *tail = (*tail)->prev;
    free((*tail)->next);
    (*tail)->next = NULL;
}

void draw_block(WINDOW* wind,int y,int x,int color) {
    mvwprintw(wind,y,x*2,"  ");
}

void draw_snake(WINDOW* wind,node* head,int y,int x) {
    int nx=x,ny=y;
    
    switch(head->dir) {
    case D_UP:  
	    for(;ny>y-(head->len);ny--) 
	        draw_block(wind,ny,nx,BODY_COLOR);
    	break;
    case D_DOWN:
	    for(;ny<y+head->len;ny++)
	        draw_block(wind,ny,nx,BODY_COLOR);
    	break;
    case D_RIGHT:
	    for(;nx<x+head->len;nx++)
	        draw_block(wind,ny,nx,BODY_COLOR);
	    break;
    case D_LEFT:
	    for(;nx>x-head->len;nx--)
	        draw_block(wind,ny,nx,BODY_COLOR);
	    break;
	    
    default:
    	break;    
    }
        
    if(head->next) { 
    	draw_snake(wind,head->next,ny,nx);
    }    

}
